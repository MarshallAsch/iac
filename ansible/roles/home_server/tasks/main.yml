- name: install plex server
  become: true
  tags: plex
  apt:
    deb: https://plex.tv/downloads/latest/5?channel=16&build=linux-x86_64&distro=debian&X-Plex-Token=ufQyX1dzPEHk94ALHcQR

- name: pull and run docker-transmission from behing vpn
  tags: transmission
  vars:
    ansible_python_interpreter: "/usr/bin/env python3-docker"
  docker_container:
    name: transmission
    image: haugene/transmission-openvpn:latest
    volumes: /storage/downloads:/data
    capabilities:
      - NET_ADMIN
    env:
      TRANSMISSION_WEB_UI: "transmission-web-control"
      PUID: "1000"
      PGID: "1000"
      OPENVPN_PROVIDER: NORDVPN
      OPENVPN_USERNAME: "ernstjason1@gmail.com"
      OPENVPN_PASSWORD: "rusU57hy"
      NORDVPN_COUNTRY: US
      NORDVPN_CATEGORY: legacy_p2p
      LOCAL_NETWORK: 10.0.0.0/24
      CREATE_TUN_DEVICE: "true"
      TZ: America/Los_Angeles
    restart_policy: unless-stopped
    published_ports: 9091:9091

- name: Create Sonarr Directories
  tags: sonarr
  become: true
  file:
    path: /etc/sonarr
    state: directory
    mode: '755'
    owner: root
    group: root

- name: Create Jacket Directories
  tags: jackett
  become: true
  file:
    path: /etc/jackett
    state: directory
    mode: '755'
    owner: root
    group: root

- name: Jackett Docker Container
  vars:
    ansible_python_interpreter: "/usr/bin/env python3-docker"
  docker_container:
    name: jackett
    image: linuxserver/jackett:latest
    pull: true
    volumes:
      - "/etc/jackett:/config:rw"
      - "/storage/downloads:/downloads:rw"
    ports:
      - "9117:9117"
    links:
      flaresolver
    env:
      TZ: "America/Los_Angeles"
      PUID: "1000"
      PGID: "1000"
      AUTO_UPDATE: "true"
    restart_policy: unless-stopped
    memory: "1g"

- name: FlareSolver
  tags: flaresolver
  vars:
    ansible_python_interpreter: "/usr/bin/env python3-docker"
  docker_container:
    name: flaresolver
    image: ghcr.io/flaresolverr/flaresolverr:latest
    pull: true
    ports:
      - "8191:8191"
    env:
      CAPTCHA_SOLVER: "hcaptcha-solver"
    restart_policy: unless-stopped

- name: Sonarr
  tags: sonarr
  vars:
    ansible_python_interpreter: "/usr/bin/env python3-docker"
  docker_container:
    name: sonarr
    image: linuxserver/sonarr:version-3.0.6.1342
    pull: true
    volumes:
      - "/storage/tv:/tv:rw"
      - "/storage/downloads:/data:rw"
      - "/etc/sonarr:/config:rw"
    ports:
      - "8989:8989"
    env:
      TZ: "America/Los_Angeles"
      PUID: "1000"
      PGID: "1000"
    restart_policy: unless-stopped
    memory: 1g
    links:
      - "jackett: ubuntu-server"

- name: Create Radarr Directories
  tags: radarr
  become: true
  file:
    path: /etc/radarr
    state: directory
    mode: '755'
    owner: root
    group: root

- name: Radarr
  tags: radarr
  vars:
    ansible_python_interpreter: "/usr/bin/env python3-docker"
  docker_container:
    name: radarr
    image: linuxserver/radarr:version-3.2.2.5080
    pull: true
    volumes:
      - "/storage/movies:/movies:rw"
      - "/storage/downloads:/data:rw"
      - "/etc/radarr:/config:rw"
    ports:
      - "7878:7878"
    env:
      TZ: "America/Los_Angeles"
      PUID: "1000"
      PGID: "1000"
    restart_policy: unless-stopped
    memory: 1g
    links:
      - "jackett: ubuntu-server"

# https://github.com/google/android-emulator-container-scripts
# - name: Deploy Android Emulator
#   tags: android-emulator
#   vars:
#     ansible_python_interpreter: "/usr/bin/env python3-docker"
#   docker_container:
#     name: android-emulator
#     image: us-docker.pkg.dev/android-emulator-268719/images/30-google-x64:30.3.4
#     pull: true
#     restart_policy: unless-stopped
#     devices:
#       - "/dev/kvm"
#     ports:
#       - "5555:5555"
#     env:
#       EMULATOR_ARGS: "-gpu swiftshader_indirect"

# https://github.com/myoung34/docker-github-actions-runner
# - name: Deploy Github Actions Runner
#   tags: gh-actions
#   vars:
#     ansible_python_interpreter: "/usr/bin/env python3-docker"
#   docker_container:
#     name: gh-actions
#     image: myoung34/github-runner:latest
#     pull: true
#     volumes:
#       - "/dev/bus/usb:/dev/bus/usb"
#       - "/var/run/docker.sock:/var/run/docker.sock"
#       - "/tmp/github-runner-grape:/tmp/github-runner"
#     restart_policy: unless-stopped
#     privileged: true
#     env:
#       ACCESS_TOKEN: "{{ github_access_token_grape }}"
#       RUNNER_NAME: home.jasonernst.com
#       RUNNER_WORKDIR: /tmp/github-runner
#       RUNNER_GROUP: default
#       REPO_URL: https://github.com/compscidr/grape-networking-java
#       LABELS: "self-hosted"
#       ORG_RUNNER: "false"
#     links:
#       - "android-emulator"

- name: install adb
  become: true
  apt:
    pkg:
      - adb
      - android-sdk-platform-tools-common

- name: adding jason to group plugdev for adb
  become: true
  user:
    name: jason
    groups: plugdev
    append: yes
