# programming languages (c/c++, java/ python, go)
- name: install development tools
  become: true
  apt:
    pkg:
      - build-essential
      - cmake
      - autoconf
      - python3-dev
      - python3-pip
      - python3-venv
      - python3-setuptools
      - golang
      - openjdk-11-jdk
      - git
      - npm
      - adb
      - android-sdk-platform-tools-common
      - fzf
      - unzip

- name: install ubuntu-specific development tools (perf)
  become: true
  apt:
    pkg:
      - linux-tools-common
      - linux-tools-generic
  when: ansible_distribution == 'Ubuntu'

- name: install debian-specific development tools (perf)
  become: true
  apt:
    pkg:
      - linux-perf
  when: ansible_distribution == 'Debian'

- name: adding jason to group plugdev for adb
  become: true
  user:
    name: jason
    groups: plugdev
    append: yes

- name: add ansible GPG
  tags: ansible
  become: true
  apt_key:
    keyserver: keyserver.ubuntu.com
    id: 6125E2A8C77F2818FB7BD15B93C4A3FD7BB9C367

- name: Add ansible PPA
  become: true
  tags: ansible
  ansible.builtin.apt_repository:
    repo: ppa:ansible/ansible

# ansible and terraform
- name: install deploy tools
  tags: ansible
  become: true
  apt:
    pkg:
      - ansible

- name: install terraform
  include_role:
    name: diodonfrost.terraform
    apply:
      become: true

# github cli
- name: add git cli GPG apt key
  become: true
  apt_key:
    keyserver: keyserver.ubuntu.com
    id: C99B11DEB97541F0

- name: add github cli repository
  become: true
  apt_repository:
    repo: "deb [arch=amd64] https://cli.github.com/packages {{ ansible_distribution_release }} main"
    state: present

- name: update apt and install gh
  become: true
  apt: update_cache=yes name=gh state=latest

# - name: setup default git configuration
#   become_user: jason
#   git_config:
#     name="{{ item.name }}"
#     scope=global
#     value="{{ item.value }}"
#   with_items:
#     - {name:"user.name", value:"Jason Ernst"}
#     - {name:"user.email", value:"ernstjason1@gmail.com"}
#     - {name:"user.signingkey", value:"BDD9823CA1EA5636114208E86CD8B581B5FA61E1"}
#    - {name:"pull.rebase", value:"false"}

# yarn: https://linuxize.com/post/how-to-install-yarn-on-ubuntu-20-04/
- name: add yarn GPG
  tags: yarn
  become: true
  apt_key:
    keyserver: https://dl.yarnpkg.com/debian/pubkey.gpg
    id: 72ECF46A56B4AD39C907BBB71646B01B86E50310

- name: add yarn repo
  become: true
  tags: yarn
  apt_repository:
    repo: "deb https://dl.yarnpkg.com/debian/ stable main"
    state: present

- name: update apt and install yarn
  become: true
  tags: yarn
  apt: update_cache=yes name=yarn state=latest

# nano
- name: install nano rc
  become_user: jason
  copy:
    src: files/.nanorc
    dest: ~/.nanorc
    mode: '644'
    owner: jason
    group: jason

# better terminal + tmux
- name: install command line apt packages (fish, powerline, tmux)
  become: true
  apt:
    pkg:
      - fish
      - powerline
      - tmux

- name: tmux config
  become_user: jason
  git:
    repo: https://github.com/gpakosz/.tmux.git
    dest: ~/.tmux
    version: 3bfec1a25a8a66dd251d37f4efcd6a0e9f30a6da

- name: tmux link
  become_user: jason
  file:
    src: ~/.tmux/.tmux.conf
    dest: ~/.tmux.conf
    state: link
    owner: jason
    group: jason

- name: tmux config local
  become_user: jason
  copy:
    src: files/.tmux.conf.local
    dest: ~/.tmux.conf.local
    mode: '644'
    owner: jason
    group: jason

- name: install oh-my-fish
  git:
    repo: https://github.com/oh-my-fish/oh-my-fish.git
    dest: ~/.local/share/omf-install
    update: true
    version: 0b1396ad7962073fa25615bf03c43b53eddc2d56

  become: true
  become_user: jason

- name: install oh-my-fish themes and plugins
  command: >
    fish -c "~/.local/share/omf-install/bin/install --noninteractive --yes"
  args:
    creates: ~/.local/share/omf/themes/default/
  become: true
  become_user: jason

- name: install bob the fish theme
  command: fish -c "omf install bobthefish"
  args:
    creates: /home/jason/.local/share/omf/themes/bobthefish/
  become: true
  become_user: jason

- name: Create fish functions directory
  become_user: jason
  file:
    path: /home/jason/.config/fish/functions
    state: directory

- name: Add fish keybindings for fzf
  lineinfile:
    dest: /home/jason/.config/fish/functions/fish_user_key_bindings.fish
    owner: jason
    create: yes
    line: "fzf_key_bindings"

- name: install forgit for fish
  command: fish -c "omf install https://github.com/wfxr/forgit"
  args:
    creates: /home/jason/.local/share/omf/pkg/fo
  become: true
  become_user: jason

# bashrc updates for fzf (see /usr/share/doc/fzf/README.Debian)
# and forgit: https://github.com/wfxr/forgit
- name: Update bashrc fzf
  lineinfile:
    dest: /home/jason/.bashrc
    owner: jason
    line: "{{ item }}"
  with_items:
    - "source /usr/share/doc/fzf/examples/key-bindings.bash"
    - "source /usr/share/doc/fzf/examples/completion.bash"
    - "source <(curl -sSL git.io/forgit)"

# bashrc updates for DEBEMAIL and DEBFULLNAME
- name: Update bashrc debmaintainer
  tags: debmaintainer
  lineinfile:
    dest: /home/jason/.bashrc
    owner: jason
    line: "{{ item }}"
  with_items:
    - 'DEBEMAIL="ernstjason1@gmail.com"'
    - 'DEBFULLNAME="Jason Ernst"'

# balena cli
- name: install balena cli
  become: true
  tags: balena
  ansible.builtin.unarchive:
    src: https://github.com/balena-io/balena-cli/releases/download/v12.44.29/balena-cli-v12.44.29-linux-x64-standalone.zip
    dest: /opt
    remote_src: yes

# add /opt/balana-cli to path
- name: add balena to to path
  become: true
  tags: balena
  lineinfile:
    dest: /etc/environment
    state: present
    backrefs: yes
    regexp: 'PATH=(["]*)((?!.*?/opt/balena-cli).*?)(["]*)$'
    line: 'PATH=\1\2:/opt/balena-cli\3'

- name: add zig repository
  tags: zig
  become: true
  apt_repository:
    repo: "deb [trusted=yes] https://apt.fury.io/compscidr/ /"
    state: present
    update_cache: true

- name: update apt and install zig
  tags: zig
  become: true
  apt: update_cache=yes name=zig state=latest
